version: '3.9'

services:
  jellyfin:
    container_name: jellyfin_new
    image: jellyfin/jellyfin
    network_mode: host
    restart: unless-stopped
    user: "1000:1000"
    environment:
      - JELLYFIN_PublishedServerUrl=http://192.168.1.100
    volumes:
      - /opt/jellifyn/config:/config:rw
      - /opt/jellifyn/cache:/cache:rw
      - /opt/qbittorrent/downloads:/media:rw
      - /mnt/media2:/media2:ro
      - /opt/fonts:/usr/local/share/fonts/custom:ro

  homeassistant:
    container_name: homeassistant
    image: ghcr.io/home-assistant/home-assistant:stable
    network_mode: host
    privileged: true
    restart: unless-stopped
    volumes:
      - /opt/homeassistant/config:/config:rw
      - /etc/localtime:/etc/localtime:ro

  portainer:
    container_name: portainer
    image: portainer/portainer-ce
    ports:
      - "9000:9000"
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:rw
      - /opt/portainer:/data:rw

  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    environment:
      - PUID=1000
      - PGID=988
      - TZ=Etc/UTC
      - WEBUI_PORT=8090
    volumes:
      - /opt/qbittorrent/appdata:/config
      - /opt/qbittorrent/downloads:/downloads
    ports:
      - 8090:8090
      - 6881:6881
      - 6881:6881/udp
    restart: unless-stopped

  web:
    image: nginx:latest
    container_name: webserver
    ports:
      - "8080:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - app_backend
      - app_frontend

  db:
    image: postgres:latest
    container_name: postgres_db
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: mydatabase
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  app_backend:
    container_name: app_backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    working_dir: /app
    volumes:
      - ./backend:/app
      - /app/node_modules
    environment:
      - DATABASE_URL=postgres://myuser:mypassword@db:5432/mydatabase
      - PORT=8080
    depends_on:
      - db
    ports:
      - "8081:8080"

  app_frontend:
    container_name: app_frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    working_dir: /app
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - REACT_APP_API_URL=http://localhost:8081
      - PORT=3000
    ports:
      - "3000:3000"

volumes:
  postgres_data:
